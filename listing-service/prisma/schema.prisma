generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Amenity {
  id          Int           @id(map: "Amenity_pk") @default(autoincrement())
  name        String        @db.VarChar
  description String
  createdAt   DateTime      @default(now()) @db.Date
  createdBy   Int
  updatedAt   DateTime      @updatedAt @db.Date
  updatedBy   Int
  RoomAmenity RoomAmenity[]
}

model Hotel {
  id          Int      @id(map: "Hotel_pk") @default(autoincrement())
  hotelName   String   @db.VarChar
  description String
  geolocation String   @db.VarChar
  mainPic     String   @db.VarChar
  address     String   @db.VarChar
  city        String   @db.VarChar
  locationId  Int
  createdAt   DateTime @default(now()) @db.Date
  createdBy   Int
  updatedAt   DateTime @updatedAt @db.Date
  updatedBy   Int
  Location    Location @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Hotel_fk0")
  Room        Room[]
}

model Location {
  id          Int      @id(map: "Location_pk") @default(autoincrement())
  name        String   @db.VarChar
  description String
  firstPic    String   @db.VarChar
  createdAt   DateTime @default(now()) @db.Date
  createdBy   Int
  updatedAt   DateTime @updatedAt @db.Date
  updatedBy   Int
  Hotel       Hotel[]
}

model PropertyImage {
  id                Int                 @id(map: "PropertyImage_pk") @default(autoincrement())
  imagePath         String              @db.VarChar
  createdAt         DateTime            @default(now()) @db.Date
  createdBy         Int
  updatedAt         DateTime            @updatedAt @db.Date
  updatedBy         Int
  RoomPropertyImage RoomPropertyImage[]
}

model Room {
  id                Int                 @id(map: "Room_pk") @default(autoincrement())
  name              String              @db.VarChar
  description       String
  mainPic           String              @db.VarChar
  hotelId           Int
  capacity          Json                @db.Json
  createdAt         DateTime            @default(now()) @db.Date
  createdBy         Int
  updatedAt         DateTime            @updatedAt @db.Date
  updatedBy         Int
  Hotel             Hotel               @relation(fields: [hotelId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Room_fk0")
  RoomAmenity       RoomAmenity[]
  RoomBooking       RoomBooking[]
  RoomPropertyImage RoomPropertyImage[]
}

model RoomAmenity {
  id        Int      @id(map: "RoomAmenity_pk") @default(autoincrement())
  roomId    Int
  amenityId Int
  createdAt DateTime @default(now()) @db.Date
  createdBy Int
  updatedAt DateTime @updatedAt @db.Date
  updatedBy Int
  Room      Room     @relation(fields: [roomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "RoomAmenity_fk0")
  Amenity   Amenity  @relation(fields: [amenityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "RoomAmenity_fk1")
}

model RoomBooking {
  id          Int      @id(map: "RoomBooking_pk") @default(autoincrement())
  firstName   String   @db.VarChar
  lastName    String   @db.VarChar
  email       String   @db.VarChar
  paymentCard String
  fromDate    DateTime @db.Date
  toDate      DateTime @db.Date
  price       Decimal  @db.Decimal
  roomId      Int
  Room        Room     @relation(fields: [roomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "RoomBooking_fk0")
}

model RoomPropertyImage {
  id              Int           @id(map: "RoomPropertyImage_pk") @default(autoincrement())
  roomId          Int
  propertyImageId Int
  createdAt       DateTime      @default(now()) @db.Date
  createdBy       Int
  updatedAt       DateTime      @updatedAt @db.Date
  updatedBy       Int
  Room            Room          @relation(fields: [roomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "RoomPropertyImage_fk0")
  PropertyImage   PropertyImage @relation(fields: [propertyImageId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "RoomPropertyImage_fk1")
}

// model Category {
//   id          Int       @id @default(autoincrement())
//   name        String    @db.VarChar
//   description String    @db.Text
//   firstPic    String    @db.VarChar
//   createdAt   DateTime  @default(now()) @db.Date
//   createdBy   Int
//   updatedAt   DateTime  @updatedAt @db.Date
//   updatedBy   Int
//   listings    Listing[]
// }

// model Listing {
//   id          Int      @id @default(autoincrement())
//   name        String   @db.VarChar
//   description String   @db.Text
//   firstPic    String   @db.VarChar
//   categoryId  Int
//   category    Category @relation(fields: [categoryId], references: [id])
//   capacity    Json
//   createdAt   DateTime @default(now()) @db.Date
//   createdBy   Int
//   updatedAt   DateTime @updatedAt @db.Date
//   updatedBy   Int
// }
