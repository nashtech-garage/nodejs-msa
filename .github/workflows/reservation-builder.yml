name: Build reservation service

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "reservation-service/**"
      - ".github/workflows/reservation-builder.yml"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      builder: ${{ steps.filter.outputs.builder }}
      service: ${{ steps.filter.outputs.service }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          builder:
            - 'reservation-service/package.json'
            - 'reservation-service/Dockerfile-build'
            - 'reservation-service/Dockerfile-release'
            - '.github/workflows/reservation-builder.yml'
          service:
            - 'reservation-service/**'
            - '.github/workflows/reservation-builder.yml'

  build_and_push_builder:
    needs: changes
    if: ${{ needs.changes.outputs.builder == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push reservation builer
        uses: docker/build-push-action@v3
        with:
          context: ./reservation-service
          file: ./reservation-service/Dockerfile-build
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nodejs-msa-reservation:build
      - name: Build and push reservation release
        uses: docker/build-push-action@v3
        with:
          context: ./reservation-service
          file: ./reservation-service/Dockerfile-release
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nodejs-msa-reservation:release

  build_and_push_service_dev:
    needs: [changes, build_and_push_builder]
    if: ${{ always() && needs.changes.outputs.service == 'true' && github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push reservation service
        uses: docker/build-push-action@v3
        with:
          context: ./reservation-service
          file: ./reservation-service/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nodejs-msa-reservation:dev

  build_and_push_service_latest:
    needs: [changes, build_and_push_builder]
    if: ${{ always() && needs.changes.outputs.service == 'true' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push reservation service
        uses: docker/build-push-action@v3
        with:
          context: ./reservation-service
          file: ./reservation-service/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nodejs-msa-reservation:latest
